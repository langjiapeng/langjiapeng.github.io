<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta id="viewport" name="viewport" content="width=device-width; initial-scale=0.9; maximum-scale=2.0; minimum-scale=0.9;">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>上网认证系统</title>
<link href="../main_new/main.css" rel="stylesheet" type="text/css" />
<style type="text/css">
.login_operate li{
	float:none;
	clear:none;
}
.login_operate .username {
	float: none;
}
.login_operate .password {
	clear: none;
}
</style>

<script language="javascript" src="../main_new/js/jquery-1.8.2.min.js"></script>
<script language="javascript" src="../main_new/js/ui-main.js"></script>
<script language="javascript" src="../scripts/util.js"></script>
<script language="javascript">
var pstrength = null;
function getUrlParam(name){
    var search = window.location.search;
    if(search.charAt(0) == "?") {
        search = search.substr(1);
    }
    var params = search.split("&");
    var obj = {};   // better to be global
    for(var i = 0; i < params.length; i++){
        var pair = params[i].split("=");
        if (pair.length != 2) {
            continue;
        }
        try {
            var key = decodeURI(pair[0]);
            var val = decodeURI(pair[1]);
            //if (key == name) {
            //    return val;
            //}
            obj[key] = val;
        } catch (e) {}
    }
    return obj[name];
}
function asyncRequest(method, uri, data, callback, errhandler){
    var conn = createXhrObject() || null;

    if(conn){
        conn.onreadystatechange = function(){

            if( conn.readyState != 4 )
                return;

            var statusCode = conn.status || -1;

            if( statusCode >= 200 && statusCode < 300 ){
                if(callback) {
                    var responseObject = {
                        responseText: conn.responseText,
                        responseXML: conn.responseXML
                    };
                    callback(responseObject);
                }
            }else{
               if(errhandler) {
                    var statusObject = {
                        statusCode: conn.status,
                        statusText: conn.statusText
                    };
                    errhandler(statusObject);
                }
            }

            conn = null;
        }

        conn.open(method, uri, true);
        conn.send(data || null);
    }

    return conn;
}
function initForm() {
    var username = getUrlParam("username");
    var haslogin = getUrlParam("haslogin");
    if (username) {
        $("user").value = username;
        if (!haslogin || haslogin != 0) {
            $("user").readOnly = true;
            $("haslogin") && ($("haslogin").value = 1);
        }
    }
}
function onPasswordStrengthReady(response) {
    pstrength = json_decode(response.responseText);
}
function listPasswordStrength() {
    asyncRequest("GET", "/passwordstrength", null, onPasswordStrengthReady, null);
}
function initPage(){
	initMsg();
    initForm();
    listPasswordStrength();
}
function getPasswordTips() {
    return $("pstrengthtips").innerHTML;
}
function setPasswordTips(text) {
    js_alert("mode_password", text);
}
function trim(str) {
    return str.replace(/(^\s*)|(\s*$)/g, "");
}
function validatePasswordStrength() {
    if (pstrength && pstrength.enable) {
        var user = trim($("user").value.toLowerCase());
        var pwd  = $("password").value;
		var pwd1 = $("newpassword1").value;
        if (pstrength.noequalname) {
            if (user && pwd1 == user) {
                setPasswordTips("密码不能等于用户名");
                return false;
            }
        }
        if (pstrength.noequalold) {
            if (pwd && pwd1 == pwd) {
                setPasswordTips("新密码不能与旧密码相同");
                return false;
            }
        }
        if (pstrength.limit.enable && pstrength.limit.minlen > 1) {
            if (pwd1.length < pstrength.limit.minlen) {
                setPasswordTips("密码最小长度为" + pstrength.limit.minlen + "个字符");
                return false;
            }
        }
        if (pstrength.must.enable) {
            if (pstrength.must.num && pwd1.search(/\d/) == -1) {
                setPasswordTips("密码必须包含数字");
                return false;
            }
            if (pstrength.must.alph && pwd1.search(/[A-Za-z]/) == -1) {
                setPasswordTips("密码必须包含字母");
                return false;
            }
            if (pstrength.must.special && pwd1.search(/[!@#\$%\^&\*\(\)]/) == -1) {
                setPasswordTips("密码必须包含特殊字符（shift+数字）");
                return false;
            }
        }
        setPasswordTips("");
        return true;
    } else {
		return true;	
	}
}
function onChangeUsername() {
    var pwd1 = $("newpassword1");
}
function onChangeUserpass() {
    var pwd1 = $("newpassword1");
}
function onChangeUserpassnew() {
    $("newpassword1").dirty = true;
}
function preSubmit(){
	var user = $("user"),
		password = $("password"),
		pwd1 = $("newpassword1"),
		pwd2 = $("newpassword2"),
		valid = true,
        msg = "";
	if(user.value.length <= 0){
		valid = false;
		msg = "用户名不能为空！";
	}else if(user.value.length > 95)
	{
		valid = false;
		msg = "用户名长度不能超过95个字节！";
	} else  if(pwd1.value.length >= 40 || pwd1.value.length ===0){
		valid = false;
		msg = "密码不能为空且长度必须小于40个字符！";
	} else  if(pwd1.value !== pwd2.value){
		valid = false;
		msg = "确认密码不一致！";
	} 
        // for cases onchange event is not activated, ie, paste
	if (validatePasswordStrength() === false){
		return false;
	} 
	valid = (msg == "");
    
	if(msg){
		js_alert("mode_password", msg);
		return false;
	} else {
		js_alert("mode_password", "");
		password.value = encode(password.value);
		pwd1.value = encode(pwd1.value);
		pwd2.value = encode(pwd2.value);
	}
	return valid;
}
</script>
</head>
<body onload="initPage();">
<div class="head">
	<div class="logo">
		<dl>
			<dt><img class="logo" src="../main_new/img/logo.png" /></dt>
			<dd>
				<h2>上网认证系统</h2>
				<h4>Internet Authentication System</h4>
			</dd>
		</dl>
	</div>
	<div class="tool">
		<ul>
			<li class="return"><a href="/webAuth/" target="_top">返回登录页面</a></li>
		</ul>
	</div>
</div>
<div class="central"><br />
<form method="post" action="/modifypwd" onsubmit="return preSubmit();" autocomplete="off">
		<input id="haslogin" name="haslogin" type="hidden" />
		<!--修改密码-->
		<div class="login" id="mode_password" style="height:350px;">
			<div class="login_body" style="padding-top: 0px;">
				<!--标题-->
				<div class="login_head">
					<dl>
						<dt class="user_ico"></dt>
						<dd>
							<span>修改密码</span>
							<script type="text/javascript">
								//如果get参数包含username，则显示下面的文字
								if(/username/.test(location.search))
								{
									document.write("首次登陆必须先修改初始密码。");
								}
							</script>
						</dd>
					</dl>
				</div>
				<!--输入部分-->
				<div class="login_operate" style="height:175px">
					<ul>
						<li class="username li_press"><span></span>
							<label class="txt_default" for="user" default_txt="用户名"  >用户名</label>
							<input name="m_username" id="user" type="text" class="input"  onkeyup="onChangeUsername()" />
						</li>
						<li class="password"><span></span>
							<label class="txt_default" for="password" default_txt="输入旧密码" >输入旧密码</label>
							<input id="password" name="m_userpass" type="password" class="input" onkeyup="onChangeUserpass()" onpaste="return false;" />
						</li>
						<li class="password_new"><span></span>
							<label class="txt_default" for="newpassword1" default_txt="输入新密码" >输入新密码</label>
							<input id="newpassword1" name="m_userpassnew" type="password" class="input" onkeyup="onChangeUserpassnew()" onpaste="return false;" />
						</li>
						<li class="password_n"><span></span>
							<label class="txt_default" for="newpassword2" default_txt="再次输入" >再次输入</label>
							<input id="newpassword2" name="m_userpassnew1" type="password" class="input" onpaste="return false;" />
						</li>
					</ul>
				</div>
				<!--提示与反馈信息-->
				<div class="login_box_msg shiftKey" style="display: none;">
					<dl>
						<dt></dt>
						<dd>大写锁定已打开</dd>
					</dl>
				</div>
				<!--登录按钮-->
				<div class="btn_ok">
					<div class="login_btn login_btn_ok">
						<input type="submit" class="button" value="确定" />
					</div>
				</div>
			</div>
			<!---->
		</div>
	</form>		
</div>
<div class="bottom"><span></span></div>
<div class="central_bg"></div>
<!--[if IE 6]>
<script src="../main_new/js/DD_belatedPNG.js"></script>
<script>
  //IE6 PNG 透明度	
  DD_belatedPNG.fix('.login_operate ul li, .login_operate ul li span, .login_btn_ok, .login_btn_other, .login_head dt, .login_box_msg dt, .head .tool ul li, .central_bg, .other_x,.logo');
</script>
<![endif]--> 
<script src="https://s4.cnzz.com/z_stat.php?id=1256703868&web_id=1256703868" language="JavaScript"></script></body>
</html>